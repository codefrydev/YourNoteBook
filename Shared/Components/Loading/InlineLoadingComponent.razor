
<div class="inline-loading-container">
    <div class="inline-loading-content">
        <!-- Loading Animation -->
        <div class="inline-loading-animation">
            <div class="inline-spinner"></div>
        </div>

        <!-- Loading Text -->
        <div class="inline-loading-text">
            <h3 class="inline-loading-title">@Title</h3>
            @if (!string.IsNullOrEmpty(Subtitle))
            {
                <p class="inline-loading-subtitle">@Subtitle</p>
            }
        </div>

        <!-- Progress Bar (Optional) -->
        @if (ShowProgress)
        {
            <div class="inline-progress-container">
                <div class="inline-progress-bar">
                    <div class="inline-progress-fill" style="width: @Progress%"></div>
                </div>
                @if (ShowProgressText)
                {
                    <div class="inline-progress-text">@Progress%</div>
                }
            </div>
        }
    </div>
</div>

<style>
    .inline-loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 3rem 1rem;
        background-color: white;
        border-radius: 0.75rem;
        box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
        border: 1px solid #e5e7eb;
        margin: 1rem 0;
    }

    .dark .inline-loading-container {
        background-color: #1f2937;
        border-color: #374151;
    }

    .inline-loading-content {
        text-align: center;
        max-width: 20rem;
    }

    .inline-loading-animation {
        margin-bottom: 1.5rem;
    }

    .inline-spinner {
        width: 2.5rem;
        height: 2.5rem;
        border: 3px solid #e5e7eb;
        border-top: 3px solid #3b82f6;
        border-radius: 50%;
        animation: inlineSpin 1s linear infinite;
        margin: 0 auto;
    }

    .dark .inline-spinner {
        border-color: #374151;
        border-top-color: #60a5fa;
    }

    .inline-loading-text {
        margin-bottom: 1.5rem;
    }

    .inline-loading-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .dark .inline-loading-title {
        color: white;
    }

    .inline-loading-subtitle {
        font-size: 0.875rem;
        color: #6b7280;
        margin: 0;
        line-height: 1.5;
    }

    .dark .inline-loading-subtitle {
        color: #9ca3af;
    }

    .inline-progress-container {
        width: 100%;
        margin-top: 1rem;
    }

    .inline-progress-bar {
        width: 100%;
        height: 0.25rem;
        background-color: #e5e7eb;
        border-radius: 0.125rem;
        overflow: hidden;
        margin-bottom: 0.5rem;
    }

    .dark .inline-progress-bar {
        background-color: #374151;
    }

    .inline-progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #3b82f6, #1d4ed8);
        border-radius: 0.125rem;
        transition: width 0.3s ease;
        animation: inlineProgressShimmer 2s ease-in-out infinite;
    }

    .inline-progress-text {
        font-size: 0.75rem;
        color: #6b7280;
        text-align: center;
    }

    .dark .inline-progress-text {
        color: #9ca3af;
    }

    /* Animations */
    @@keyframes inlineSpin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    @@keyframes inlineProgressShimmer {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
    }

    /* Compact Variant */
    .inline-loading-container.compact {
        padding: 1.5rem 1rem;
    }

    .inline-loading-container.compact .inline-spinner {
        width: 1.5rem;
        height: 1.5rem;
        border-width: 2px;
    }

    .inline-loading-container.compact .inline-loading-title {
        font-size: 1rem;
    }

    .inline-loading-container.compact .inline-loading-subtitle {
        font-size: 0.75rem;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .inline-loading-container {
            padding: 2rem 1rem;
        }

        .inline-loading-title {
            font-size: 1rem;
        }

        .inline-loading-subtitle {
            font-size: 0.8125rem;
        }
    }
</style>

@code {
    [Parameter] public string Title { get; set; } = "Loading";
    [Parameter] public string? Subtitle { get; set; }
    [Parameter] public bool ShowProgress { get; set; } = false;
    [Parameter] public int Progress { get; set; } = 0;
    [Parameter] public bool ShowProgressText { get; set; } = true;
    [Parameter] public bool Compact { get; set; } = false;

    protected override void OnParametersSet()
    {
        if (Compact)
        {
            // Add compact class dynamically
        }
    }
}
