@page "/Home"
@layout HomeLayout
@implements IDisposable
<PageTitle>YourNoteBook - Organize Your Digital Life</PageTitle> 

@if (_isLoading)
{
    <InlineLoadingComponent Title="Loading Dashboard" Subtitle="Preparing your workspace..." />
}
else if (CurrentContext.IsAuthenticated)
{
    <!-- Welcome Header - Compact -->
    <div class="mb-6">
        <h1 class="text-2xl font-bold tracking-tight text-stone-900 dark:text-stone-200 mb-1">Welcome to YourNoteBook</h1>
        <p class="text-sm text-stone-600 dark:text-gray-400">Organize your thoughts, ideas, and resources in one place</p>
    </div>

    <!-- Stats Overview - More Compact -->
    <div class="grid grid-cols-2 md:grid-cols-4 gap-3 mb-6">
        <div class="bg-white dark:bg-gray-800 rounded-lg p-3 border border-stone-200 dark:border-gray-700">
            <div class="flex items-center gap-2">
                <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center">
                    <span class="material-symbols-outlined text-blue-600 dark:text-blue-400 text-sm">folder</span>
                </div>
                <div>
                    <p class="text-lg font-bold text-stone-900 dark:text-stone-200">@Folders.Count</p>
                    <p class="text-xs text-stone-600 dark:text-gray-400">Folders</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white dark:bg-gray-800 rounded-lg p-3 border border-stone-200 dark:border-gray-700">
            <div class="flex items-center gap-2">
                <div class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center">
                    <span class="material-symbols-outlined text-green-600 dark:text-green-400 text-sm">description</span>
                </div>
                <div>
                    <p class="text-lg font-bold text-stone-900 dark:text-stone-200">@Notes.Count</p>
                    <p class="text-xs text-stone-600 dark:text-gray-400">Notes</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white dark:bg-gray-800 rounded-lg p-3 border border-stone-200 dark:border-gray-700">
            <div class="flex items-center gap-2">
                <div class="w-8 h-8 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center">
                    <span class="material-symbols-outlined text-orange-600 dark:text-orange-400 text-sm">link</span>
                </div>
                <div>
                    <p class="text-lg font-bold text-stone-900 dark:text-stone-200">@Shortcuts.Count</p>
                    <p class="text-xs text-stone-600 dark:text-gray-400">Shortcuts</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white dark:bg-gray-800 rounded-lg p-3 border border-stone-200 dark:border-gray-700">
            <div class="flex items-center gap-2">
                <div class="w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center">
                    <span class="material-symbols-outlined text-purple-600 dark:text-purple-400 text-sm">tag</span>
                </div>
                <div>
                    <p class="text-lg font-bold text-stone-900 dark:text-stone-200">@Tags.Count</p>
                    <p class="text-xs text-stone-600 dark:text-gray-400">Tags</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="flex flex-wrap gap-3 mb-8">
        <button @onclick="AddNewFolder" class="btn-modern-primary">
            <span class="material-symbols-outlined">add</span>
            <span class="truncate">New Folder</span>
        </button>
        <button @onclick="LoadAllData" class="btn-modern-secondary">
            <span class="material-symbols-outlined">refresh</span>
            <span class="truncate">Refresh Data</span>
        </button>
        <button @onclick="CreateTestData" class="btn-modern-secondary">
            <span class="material-symbols-outlined">science</span>
            <span class="truncate">Create Test Data</span>
        </button>
        <button @onclick="ListFirebaseCollections" class="btn-modern-secondary">
            <span class="material-symbols-outlined">list</span>
            <span class="truncate">List Collections</span>
        </button>
        <button @onclick="ShowFirebaseConfig" class="btn-modern-secondary">
            <span class="material-symbols-outlined">settings</span>
            <span class="truncate">Show Config</span>
        </button>
        <button @onclick="CreateNote" class="btn-modern-primary">
            <span class="material-symbols-outlined">description</span>
            <span class="truncate">Create Note</span>
        </button>
    </div>

    @if (InMemoryRepo.Folders.Count == 0 && InMemoryRepo.Notes.Count == 0)
    {
        <!-- Empty State -->
        <div class="text-center py-20">
            <div class="w-32 h-32 mx-auto bg-gradient-to-br from-blue-100 via-purple-100 to-pink-100 dark:from-blue-900 dark:via-purple-900 dark:to-pink-900 rounded-full flex items-center justify-center shadow-2xl mb-8">
                <span class="text-6xl">🚀</span>
            </div>
            <h2 class="text-4xl font-bold text-stone-900 dark:text-stone-200 mb-4">Ready to Get Started?</h2>
            <p class="text-xl text-stone-600 dark:text-gray-400 max-w-2xl mx-auto mb-8">Create your first folder and start organizing your digital life.</p>
            <button @onclick="AddNewFolder" class="btn-modern-primary">
                <span class="material-symbols-outlined">add</span>
                <span class="truncate">Create First Folder</span>
            </button>
        </div>
    }
    else
    {
        <!-- Recent Folders -->
        @if (Folders.Count > 0)
        {
            <div class="mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-bold text-stone-900 dark:text-stone-200">Recent Folders</h2>
                    <button @onclick="NavigateToAllFolders" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">View All</button>
                </div>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                    @foreach (var folder in Folders.Take(6).OrderByDescending(f => f.UpdatedAt))
                    {
                        <div class="group relative bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-xl border border-gray-100 dark:border-gray-700 cursor-pointer overflow-hidden transition-all duration-300 hover:scale-105 hover:-translate-y-1" @onclick="() => NavigateToFolder(folder.Id)">
                            <!-- Gradient Background -->
                            <div class="absolute inset-0 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-800 dark:to-gray-900 opacity-50"></div>
                            
                            <!-- Content -->
                            <div class="relative p-4">
                                <!-- Header -->
                                <div class="flex items-start justify-between mb-3">
                                    <div class="flex items-center gap-2">
                                        <div class="p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg">
                                            <span class="material-symbols-outlined text-blue-600 dark:text-blue-400 text-lg">folder</span>
                                        </div>
                                        <div>
                                            <h3 class="text-base font-semibold text-gray-900 dark:text-white mb-0.5">@folder.Name</h3>
                                            <p class="text-xs text-gray-500 dark:text-gray-400">@folder.UpdatedAt.ToString("MMM dd")</p>
                                        </div>
                                    </div>
                                    <button @onclick:stopPropagation="true" @onclick="() => ShowFolderOptions(folder.Id)" class="p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200 opacity-0 group-hover:opacity-100">
                                        <span class="material-symbols-outlined text-gray-500 dark:text-gray-400 text-sm">more_vert</span>
                                    </button>
                                </div>

                                <!-- Description -->
                                <p class="text-gray-600 dark:text-gray-300 text-xs mb-3 line-clamp-2">@folder.Description</p>

                                <!-- Stats -->
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-3">
                                        <div class="flex items-center gap-1">
                                            <span class="material-symbols-outlined text-green-600 dark:text-green-400 text-xs">description</span>
                                            <span class="text-xs font-medium text-gray-700 dark:text-gray-300">@InMemoryRepo.GetNotesByFolderId(folder.Id).Count</span>
                                        </div>
                                        <div class="flex items-center gap-1">
                                            <span class="material-symbols-outlined text-orange-600 dark:text-orange-400 text-xs">link</span>
                                            <span class="text-xs font-medium text-gray-700 dark:text-gray-300">@InMemoryRepo.GetShortcutsByFolderId(folder.Id).Count</span>
                                        </div>
                                    </div>
                                    
                                    <!-- Open Arrow -->
                                    <div class="p-1.5 bg-blue-100 dark:bg-blue-900/30 rounded-full group-hover:bg-blue-200 dark:group-hover:bg-blue-800/50 transition-colors duration-200">
                                        <span class="material-symbols-outlined text-blue-600 dark:text-blue-400 text-xs">arrow_forward</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Bottom Accent -->
                            <div class="absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 to-indigo-500"></div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Recent Notes -->
        @if (Notes.Count > 0)
        {
            <div class="mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-bold text-stone-900 dark:text-stone-200">Recent Notes</h2>
                    <a href="/Folder" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">View All</a>
                </div>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3">
                    @foreach (var note in Notes.Take(8).OrderByDescending(n => n.Modified))
                    {
                        <div class="group relative bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg border border-gray-100 dark:border-gray-700 cursor-pointer overflow-hidden transition-all duration-200 hover:scale-105" @onclick="() => NavigateToNote(note.Id)">
                            <div class="p-3">
                                <div class="flex items-start gap-2 mb-2">
                                    <div class="p-1.5 bg-green-100 dark:bg-green-900/30 rounded-lg">
                                        <span class="material-symbols-outlined text-green-600 dark:text-green-400 text-sm">description</span>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <h3 class="text-sm font-semibold text-gray-900 dark:text-white truncate">@note.Title</h3>
                                        <p class="text-xs text-gray-500 dark:text-gray-400">@note.Modified.ToString("MMM dd")</p>
                                    </div>
                                </div>
                                <p class="text-xs text-gray-600 dark:text-gray-300 line-clamp-2 mb-2">@note.Content</p>
                                @if (note.Tags.Count > 0)
                                {
                                    <div class="flex gap-1 flex-wrap">
                                        @foreach (var tag in note.Tags.Take(2))
                                        {
                                            <span class="px-1.5 py-0.5 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded">@tag.Name</span>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Recent Shortcuts -->
        @if (Shortcuts.Count > 0)
        {
            <div class="mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-bold text-stone-900 dark:text-stone-200">Recent Shortcuts</h2>
                    <a href="/Folder" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">View All</a>
                </div>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3">
                    @foreach (var shortcut in Shortcuts.Take(8).OrderByDescending(s => s.Modified))
                    {
                        <div class="group relative bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg border border-gray-100 dark:border-gray-700 cursor-pointer overflow-hidden transition-all duration-200 hover:scale-105" @onclick="() => NavigateToShortcut(shortcut.Id)">
                            <div class="p-3">
                                <div class="flex items-start gap-2 mb-2">
                                    <div class="p-1.5 bg-orange-100 dark:bg-orange-900/30 rounded-lg">
                                        <span class="material-symbols-outlined text-orange-600 dark:text-orange-400 text-sm">link</span>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <h3 class="text-sm font-semibold text-gray-900 dark:text-white truncate">@shortcut.Action</h3>
                                        <p class="text-xs text-gray-500 dark:text-gray-400">@shortcut.Modified.ToString("MMM dd")</p>
                                    </div>
                                </div>
                                <p class="text-xs text-gray-600 dark:text-gray-300 line-clamp-2 mb-2">@shortcut.Description</p>
                                <div class="flex items-center justify-between">
                                    <span class="text-xs text-gray-500 dark:text-gray-400 font-mono bg-gray-100 dark:bg-gray-700 px-1.5 py-0.5 rounded">@shortcut.Keys</span>
                                    <span class="material-symbols-outlined text-gray-400 text-xs">arrow_forward</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
}
else
{
    <!-- Modern Authentication Screen -->
    <div class="text-center py-20">
        <div class="w-32 h-32 mx-auto bg-gradient-to-br from-blue-100 via-purple-100 to-pink-100 dark:from-blue-900 dark:via-purple-900 dark:to-pink-900 rounded-full flex items-center justify-center shadow-2xl mb-8">
            <span class="text-6xl">🔐</span>
        </div>
        <h2 class="text-4xl font-bold text-stone-900 dark:text-stone-200 mb-4">Connect to Firebase</h2>
        <p class="text-xl text-stone-600 dark:text-gray-400 max-w-2xl mx-auto mb-8">Connect your Firebase database to unlock the full potential of your digital workspace.</p>
        <button @onclick="AddFirebaseCode" class="btn-modern-primary">
            <span class="material-symbols-outlined">cloud</span>
            <span class="truncate">Connect Database</span>
        </button>
    </div>
}

@if (_showAddNoteDialog)
{
    <AddNoteDialog 
        OnSave="OnNoteSaved"
        OnCancel="OnNoteDialogCancel"
        AvailableFolders="@InMemoryRepo.Folders" />
}
